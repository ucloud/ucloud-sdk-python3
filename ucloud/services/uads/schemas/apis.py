""" Code is generated by ucloud-model, DO NOT EDIT IT. """


from ucloud.core.typesystem import schema, fields
from ucloud.services.uads.schemas import models

""" UADS API Schema
"""


"""
API: AddHighProtectGameIPInfo

添加代理ip
"""


class AddHighProtectGameIPInfoRequestSchema(schema.RequestSchema):
    """AddHighProtectGameIPInfo - 添加代理ip"""

    fields = {
        "CouponId": fields.Str(required=False, dump_to="CouponId"),
        "LineType": fields.Str(required=True, dump_to="LineType"),
        "Remark": fields.Str(required=False, dump_to="Remark"),
        "ResourceId": fields.Str(required=True, dump_to="ResourceId"),
        "TypeIP": fields.Str(required=True, dump_to="TypeIP"),
        "UserIP": fields.Str(required=True, dump_to="UserIP"),
    }


class AddHighProtectGameIPInfoResponseSchema(schema.ResponseSchema):
    """AddHighProtectGameIPInfo - 添加代理ip"""

    fields = {
        "Cname": fields.Str(required=True, load_from="Cname"),
        "DefenceIP": fields.Str(required=True, load_from="DefenceIP"),
        "IPId": fields.Int(required=True, load_from="IPId"),
        "SrcIP": fields.Str(required=True, load_from="SrcIP"),
    }


"""
API: AddNapAllowListDomain

添加域名允许列表
"""


class AddNapAllowListDomainRequestSchema(schema.RequestSchema):
    """AddNapAllowListDomain - 添加域名允许列表"""

    fields = {
        "Domain": fields.List(fields.Str()),
        "ResourceId": fields.Str(required=True, dump_to="ResourceId"),
    }


class AddNapAllowListDomainResponseSchema(schema.ResponseSchema):
    """AddNapAllowListDomain - 添加域名允许列表"""

    fields = {
        "Data": fields.List(
            models.DomainConfigResultSchema(), required=False, load_from="Data"
        ),
    }


"""
API: BindNapIP

直连高防：将尚未使用的高防EIP绑定到指定的资源
"""


class BindNapIPRequestSchema(schema.RequestSchema):
    """BindNapIP - 直连高防：将尚未使用的高防EIP绑定到指定的资源"""

    fields = {
        "BindResourceId": fields.Str(required=True, dump_to="BindResourceId"),
        "EIPId": fields.Str(required=True, dump_to="EIPId"),
        "NapIp": fields.Str(required=True, dump_to="NapIp"),
        "ProjectId": fields.Str(required=True, dump_to="ProjectId"),
        "ResourceId": fields.Str(required=True, dump_to="ResourceId"),
        "ResourceType": fields.Str(required=True, dump_to="ResourceType"),
    }


class BindNapIPResponseSchema(schema.ResponseSchema):
    """BindNapIP - 直连高防：将尚未使用的高防EIP绑定到指定的资源"""

    fields = {
        "Message": fields.Str(required=True, load_from="Message"),
    }


"""
API: BuyHighProtectGameService

购买高防服务
"""


class BuyHighProtectGameServiceRequestSchema(schema.RequestSchema):
    """BuyHighProtectGameService - 购买高防服务"""

    fields = {
        "AccessMode": fields.Str(
            required=False, dump_to="AccessMode"
        ),  # Deprecated, will be removed at 1.0
        "AreaLine": fields.Str(required=True, dump_to="AreaLine"),
        "ChargeType": fields.Str(required=True, dump_to="ChargeType"),
        "CouponId": fields.Str(required=False, dump_to="CouponId"),
        "DefenceDDosBaseFlowArr": fields.List(fields.Str()),
        "DefenceDDosMaxFlowArr": fields.List(fields.Str()),
        "DefenceType": fields.Str(required=False, dump_to="DefenceType"),
        "EngineRoom": fields.List(fields.Str()),
        "ForwardType": fields.Str(required=False, dump_to="ForwardType"),
        "HighProtectGameServiceName": fields.Str(
            required=False, dump_to="HighProtectGameServiceName"
        ),
        "LineType": fields.Str(required=True, dump_to="LineType"),
        "ProjectId": fields.Str(required=True, dump_to="ProjectId"),
        "Quantity": fields.Int(required=True, dump_to="Quantity"),
        "SrcBandwidth": fields.Int(required=True, dump_to="SrcBandwidth"),
        "Vendor": fields.Int(required=False, dump_to="Vendor"),
    }


class BuyHighProtectGameServiceResponseSchema(schema.ResponseSchema):
    """BuyHighProtectGameService - 购买高防服务"""

    fields = {
        "ResourceInfo": models.ResourceInfoSchema(),
    }


"""
API: CreateBGPServiceFwdRule

创建BGP高防转发规则
"""


class CreateBGPServiceFwdRuleRequestSchema(schema.RequestSchema):
    """CreateBGPServiceFwdRule - 创建BGP高防转发规则"""

    fields = {
        "BackupIP": fields.Str(required=False, dump_to="BackupIP"),
        "BackupPort": fields.Int(required=False, dump_to="BackupPort"),
        "BgpIP": fields.Str(required=True, dump_to="BgpIP"),
        "BgpIPPort": fields.Int(required=False, dump_to="BgpIPPort"),
        "FwdType": fields.Str(required=False, dump_to="FwdType"),
        "LoadBalance": fields.Str(required=False, dump_to="LoadBalance"),
        "Remark": fields.Str(required=False, dump_to="Remark"),
        "ResourceId": fields.Str(required=True, dump_to="ResourceId"),
        "SourceAddrArr": fields.List(fields.Str()),
        "SourceDetect": fields.Int(required=False, dump_to="SourceDetect"),
        "SourcePortArr": fields.List(fields.Str()),
        "SourceToaIDArr": fields.List(fields.Str()),
        "SourceType": fields.Str(required=False, dump_to="SourceType"),
    }


class CreateBGPServiceFwdRuleResponseSchema(schema.ResponseSchema):
    """CreateBGPServiceFwdRule - 创建BGP高防转发规则"""

    fields = {
        "RuleIndex": fields.Int(required=True, load_from="RuleIndex"),
    }


"""
API: CreateBGPServiceIP

分配一个BGP IP
"""


class CreateBGPServiceIPRequestSchema(schema.RequestSchema):
    """CreateBGPServiceIP - 分配一个BGP IP"""

    fields = {
        "EIPRegion": fields.Str(required=False, dump_to="EIPRegion"),
        "Remark": fields.Str(required=False, dump_to="Remark"),
        "ResourceId": fields.Str(required=True, dump_to="ResourceId"),
        "TypeIP": fields.Str(required=False, dump_to="TypeIP"),
    }


class CreateBGPServiceIPResponseSchema(schema.ResponseSchema):
    """CreateBGPServiceIP - 分配一个BGP IP"""

    fields = {
        "Cname": fields.Str(required=False, load_from="Cname"),
        "DefenceIP": fields.Str(required=True, load_from="DefenceIP"),
        "EnableSwitch": fields.Int(required=False, load_from="EnableSwitch"),
        "IPId": fields.Int(required=False, load_from="IPId"),
    }


"""
API: DeleteBGPServiceFwdRule

删除转发规则
"""


class DeleteBGPServiceFwdRuleRequestSchema(schema.RequestSchema):
    """DeleteBGPServiceFwdRule - 删除转发规则"""

    fields = {
        "ResourceId": fields.Str(required=True, dump_to="ResourceId"),
        "RuleIndex": fields.Int(required=True, dump_to="RuleIndex"),
    }


class DeleteBGPServiceFwdRuleResponseSchema(schema.ResponseSchema):
    """DeleteBGPServiceFwdRule - 删除转发规则"""

    fields = {}


"""
API: DeleteBGPServiceIP

删除BGP高防IP
"""


class DeleteBGPServiceIPRequestSchema(schema.RequestSchema):
    """DeleteBGPServiceIP - 删除BGP高防IP"""

    fields = {
        "DefenceIp": fields.Str(required=True, dump_to="DefenceIp"),
        "Region": fields.Str(required=False, dump_to="Region"),
        "ResourceId": fields.Str(required=True, dump_to="ResourceId"),
    }


class DeleteBGPServiceIPResponseSchema(schema.ResponseSchema):
    """DeleteBGPServiceIP - 删除BGP高防IP"""

    fields = {}


"""
API: DeleteHighProtectGameIPInfo

删除高防IP
"""


class DeleteHighProtectGameIPInfoRequestSchema(schema.RequestSchema):
    """DeleteHighProtectGameIPInfo - 删除高防IP"""

    fields = {
        "DefenceIp": fields.Str(required=True, dump_to="DefenceIp"),
        "ResourceId": fields.Str(required=True, dump_to="ResourceId"),
    }


class DeleteHighProtectGameIPInfoResponseSchema(schema.ResponseSchema):
    """DeleteHighProtectGameIPInfo - 删除高防IP"""

    fields = {}


"""
API: DeleteHighProtectGameService

删除高防
"""


class DeleteHighProtectGameServiceRequestSchema(schema.RequestSchema):
    """DeleteHighProtectGameService - 删除高防"""

    fields = {
        "ResourceId": fields.Str(required=True, dump_to="ResourceId"),
    }


class DeleteHighProtectGameServiceResponseSchema(schema.ResponseSchema):
    """DeleteHighProtectGameService - 删除高防"""

    fields = {}


"""
API: DeleteNapAllowListDomain

删除域名允许列表
"""


class DeleteNapAllowListDomainRequestSchema(schema.RequestSchema):
    """DeleteNapAllowListDomain - 删除域名允许列表"""

    fields = {
        "Domain": fields.List(fields.Str()),
        "ResourceId": fields.Str(required=True, dump_to="ResourceId"),
    }


class DeleteNapAllowListDomainResponseSchema(schema.ResponseSchema):
    """DeleteNapAllowListDomain - 删除域名允许列表"""

    fields = {
        "Data": fields.List(
            models.DomainConfigResultSchema(), required=False, load_from="Data"
        ),
    }


"""
API: DescribeBuyHighProtectGameIPPrice

获取购买IP的价格
"""


class DescribeBuyHighProtectGameIPPriceRequestSchema(schema.RequestSchema):
    """DescribeBuyHighProtectGameIPPrice - 获取购买IP的价格"""

    fields = {
        "ChargeType": fields.Str(required=True, dump_to="ChargeType"),
        "Quantity": fields.Int(required=True, dump_to="Quantity"),
        "ResourceId": fields.Str(required=True, dump_to="ResourceId"),
    }


class DescribeBuyHighProtectGameIPPriceResponseSchema(schema.ResponseSchema):
    """DescribeBuyHighProtectGameIPPrice - 获取购买IP的价格"""

    fields = {
        "PremiumPrice": fields.Float(required=True, load_from="PremiumPrice"),
        "UnitPrice": fields.Float(required=True, load_from="UnitPrice"),
    }


"""
API: DescribeHighProtectGameIPInfo

获取高防IP信息
"""


class DescribeHighProtectGameIPInfoRequestSchema(schema.RequestSchema):
    """DescribeHighProtectGameIPInfo - 获取高防IP信息"""

    fields = {
        "Limit": fields.Int(required=False, dump_to="Limit"),
        "Offset": fields.Int(required=False, dump_to="Offset"),
        "ResourceId": fields.Str(required=True, dump_to="ResourceId"),
    }


class DescribeHighProtectGameIPInfoResponseSchema(schema.ResponseSchema):
    """DescribeHighProtectGameIPInfo - 获取高防IP信息"""

    fields = {
        "AvailableIPQuota": fields.Int(
            required=False, load_from="AvailableIPQuota"
        ),
        "GameIPInfo": fields.List(
            models.GameIpInfoTotalSchema(),
            required=False,
            load_from="GameIPInfo",
        ),
        "TotalCount": fields.Int(required=False, load_from="TotalCount"),
    }


"""
API: DescribeNapHistoryStatistic

获取高防历史统计
"""


class DescribeNapHistoryStatisticRequestSchema(schema.RequestSchema):
    """DescribeNapHistoryStatistic - 获取高防历史统计"""

    fields = {
        "Accuracy": fields.Int(required=False, dump_to="Accuracy"),
        "BeginTime": fields.Int(required=True, dump_to="BeginTime"),
        "EndTime": fields.Int(required=True, dump_to="EndTime"),
        "Limit": fields.Int(required=False, dump_to="Limit"),
        "NapIP": fields.Str(required=False, dump_to="NapIP"),
        "Offset": fields.Int(required=False, dump_to="Offset"),
        "ResourceId": fields.Str(required=True, dump_to="ResourceId"),
    }


class DescribeNapHistoryStatisticResponseSchema(schema.ResponseSchema):
    """DescribeNapHistoryStatistic - 获取高防历史统计"""

    fields = {
        "NetStats": fields.List(
            models.NetStatsSchema(), required=True, load_from="NetStats"
        ),
    }


"""
API: DescribeNapRealTimeStatistic

获取高防实时统计
"""


class DescribeNapRealTimeStatisticRequestSchema(schema.RequestSchema):
    """DescribeNapRealTimeStatistic - 获取高防实时统计"""

    fields = {
        "BeginTime": fields.Int(required=True, dump_to="BeginTime"),
        "EndTime": fields.Int(required=True, dump_to="EndTime"),
        "Limit": fields.Int(required=False, dump_to="Limit"),
        "NapIP": fields.Str(required=False, dump_to="NapIP"),
        "Offset": fields.Int(required=False, dump_to="Offset"),
        "ResourceId": fields.Str(required=True, dump_to="ResourceId"),
    }


class DescribeNapRealTimeStatisticResponseSchema(schema.ResponseSchema):
    """DescribeNapRealTimeStatistic - 获取高防实时统计"""

    fields = {
        "NetStats": fields.List(
            models.NetStatsSchema(), required=True, load_from="NetStats"
        ),
    }


"""
API: DescribeNapServiceInfo

获取高防服务信息
"""


class DescribeNapServiceInfoRequestSchema(schema.RequestSchema):
    """DescribeNapServiceInfo - 获取高防服务信息"""

    fields = {
        "Limit": fields.Int(required=False, dump_to="Limit"),
        "NapType": fields.Int(required=False, dump_to="NapType"),
        "Offset": fields.Int(required=False, dump_to="Offset"),
        "ProjectId": fields.Str(required=False, dump_to="ProjectId"),
        "ResourceId": fields.Str(required=False, dump_to="ResourceId"),
    }


class DescribeNapServiceInfoResponseSchema(schema.ResponseSchema):
    """DescribeNapServiceInfo - 获取高防服务信息"""

    fields = {
        "ServiceInfo": fields.List(
            models.ServiceInfoSchema(), required=False, load_from="ServiceInfo"
        ),
        "TotalCount": fields.Int(required=False, load_from="TotalCount"),
    }


"""
API: DescribePassthroughNapIP

获取直连高防IP信息
"""


class DescribePassthroughNapIPRequestSchema(schema.RequestSchema):
    """DescribePassthroughNapIP - 获取直连高防IP信息"""

    fields = {
        "Limit": fields.Int(required=False, dump_to="Limit"),
        "NapIp": fields.Str(required=False, dump_to="NapIp"),
        "Offset": fields.Int(required=False, dump_to="Offset"),
        "ResourceId": fields.Str(required=True, dump_to="ResourceId"),
    }


class DescribePassthroughNapIPResponseSchema(schema.ResponseSchema):
    """DescribePassthroughNapIP - 获取直连高防IP信息"""

    fields = {
        "AvailableIPQuota": fields.Int(
            required=True, load_from="AvailableIPQuota"
        ),
        "IPInfo": fields.List(
            models.IPInfoSchema(), required=True, load_from="IPInfo"
        ),
        "Message": fields.Str(required=True, load_from="Message"),
        "TotalCount": fields.Int(required=True, load_from="TotalCount"),
    }


"""
API: DescribeUpgradeHighProtectGameServicePrice

获取高防升降级价格
"""


class DescribeUpgradeHighProtectGameServicePriceRequestSchema(
    schema.RequestSchema
):
    """DescribeUpgradeHighProtectGameServicePrice - 获取高防升降级价格"""

    fields = {
        "AreaLine": fields.Str(required=False, dump_to="AreaLine"),
        "DefenceDDosBaseFlowArr": fields.List(fields.Str()),
        "DefenceDDosMaxFlowArr": fields.List(fields.Str()),
        "DefenceType": fields.Str(required=False, dump_to="DefenceType"),
        "EngineRoom": fields.List(fields.Str()),
        "LineType": fields.Str(required=False, dump_to="LineType"),
        "ResourceId": fields.Str(required=True, dump_to="ResourceId"),
        "SrcBandwidth": fields.Int(required=False, dump_to="SrcBandwidth"),
    }


class DescribeUpgradeHighProtectGameServicePriceResponseSchema(
    schema.ResponseSchema
):
    """DescribeUpgradeHighProtectGameServicePrice - 获取高防升降级价格"""

    fields = {
        "ChargeIPQuota": fields.Int(required=False, load_from="ChargeIPQuota"),
        "FreeIPQuota": fields.Int(required=False, load_from="FreeIPQuota"),
        "Price": fields.Int(required=True, load_from="Price"),
    }


"""
API: GetBGPServiceFwdRule

获取转发规则
"""


class GetBGPServiceFwdRuleRequestSchema(schema.RequestSchema):
    """GetBGPServiceFwdRule - 获取转发规则"""

    fields = {
        "BgpIP": fields.Str(required=False, dump_to="BgpIP"),
        "Limit": fields.Int(required=False, dump_to="Limit"),
        "Offset": fields.Int(required=False, dump_to="Offset"),
        "ResourceId": fields.Str(required=True, dump_to="ResourceId"),
        "RuleIndex": fields.Int(required=False, dump_to="RuleIndex"),
    }


class GetBGPServiceFwdRuleResponseSchema(schema.ResponseSchema):
    """GetBGPServiceFwdRule - 获取转发规则"""

    fields = {
        "AvailLoad": fields.Int(required=False, load_from="AvailLoad"),
        "AvailNonload": fields.Int(required=False, load_from="AvailNonload"),
        "IpRuleExist": fields.Bool(required=False, load_from="IpRuleExist"),
        "RuleCnt": fields.Int(required=True, load_from="RuleCnt"),
        "RuleInfo": fields.List(
            models.BGPFwdRuleSchema(), required=True, load_from="RuleInfo"
        ),
    }


"""
API: GetBGPServiceIP

获取BGP高防IP的信息
"""


class GetBGPServiceIPRequestSchema(schema.RequestSchema):
    """GetBGPServiceIP - 获取BGP高防IP的信息"""

    fields = {
        "BgpIP": fields.Str(required=False, dump_to="BgpIP"),
        "Limit": fields.Int(required=False, dump_to="Limit"),
        "Offset": fields.Int(required=False, dump_to="Offset"),
        "ResourceId": fields.Str(required=True, dump_to="ResourceId"),
    }


class GetBGPServiceIPResponseSchema(schema.ResponseSchema):
    """GetBGPServiceIP - 获取BGP高防IP的信息"""

    fields = {
        "AvailableIPQuota": fields.Int(
            required=True, load_from="AvailableIPQuota"
        ),
        "GameIPInfo": fields.List(
            models.GameIpInfoTotalSchema(),
            required=True,
            load_from="GameIPInfo",
        ),
        "TotalCount": fields.Int(required=True, load_from="TotalCount"),
    }


"""
API: GetBuyNapServicePrice

获取高防价格
"""


class GetBuyNapServicePriceRequestSchema(schema.RequestSchema):
    """GetBuyNapServicePrice - 获取高防价格"""

    fields = {
        "AccessMode": fields.Str(
            required=False, dump_to="AccessMode"
        ),  # Deprecated, will be removed at 1.0
        "AreaLine": fields.Str(required=True, dump_to="AreaLine"),
        "ChargeType": fields.Str(required=True, dump_to="ChargeType"),
        "DefenceDDosBaseFlowArr": fields.List(fields.Str()),
        "DefenceDDosMaxFlowArr": fields.List(fields.Str()),
        "EngineRoom": fields.List(fields.Str()),
        "LineType": fields.Str(required=True, dump_to="LineType"),
        "Quantity": fields.Str(required=True, dump_to="Quantity"),
        "SrcBandwidth": fields.Str(required=True, dump_to="SrcBandwidth"),
    }


class GetBuyNapServicePriceResponseSchema(schema.ResponseSchema):
    """GetBuyNapServicePrice - 获取高防价格"""

    fields = {
        "ChargeIPQuota": fields.Int(required=True, load_from="ChargeIPQuota"),
        "FreeIPQuota": fields.Int(required=True, load_from="FreeIPQuota"),
        "Message": fields.Str(required=True, load_from="Message"),
        "Price": fields.Float(required=True, load_from="Price"),
        "UdpFreeIpQuota": fields.Int(required=True, load_from="UdpFreeIpQuota"),
    }


"""
API: GetNapAllowListDomain

获取域名允许列表
"""


class GetNapAllowListDomainRequestSchema(schema.RequestSchema):
    """GetNapAllowListDomain - 获取域名允许列表"""

    fields = {
        "Domain": fields.Str(required=False, dump_to="Domain"),
        "DomainLike": fields.Str(required=False, dump_to="DomainLike"),
        "Limit": fields.Int(required=False, dump_to="Limit"),
        "Offset": fields.Int(required=False, dump_to="Offset"),
        "ResourceId": fields.Str(required=True, dump_to="ResourceId"),
    }


class GetNapAllowListDomainResponseSchema(schema.ResponseSchema):
    """GetNapAllowListDomain - 获取域名允许列表"""

    fields = {
        "DomainList": fields.List(
            models.BlockAllowDomainEntrySchema(),
            required=True,
            load_from="DomainList",
        ),
        "TotalCount": fields.Int(required=True, load_from="TotalCount"),
    }


"""
API: GetNapServiceConfig

获取高防服务配置
"""


class GetNapServiceConfigRequestSchema(schema.RequestSchema):
    """GetNapServiceConfig - 获取高防服务配置"""

    fields = {
        "AreaLine": fields.Str(required=False, dump_to="AreaLine"),
        "EngineRoom": fields.Str(required=False, dump_to="EngineRoom"),
        "LineType": fields.Str(required=False, dump_to="LineType"),
        "NapType": fields.Int(required=False, dump_to="NapType"),
    }


class GetNapServiceConfigResponseSchema(schema.ResponseSchema):
    """GetNapServiceConfig - 获取高防服务配置"""

    fields = {
        "NapServiceConfig": fields.List(
            models.NapServiceConfigEntrySchema(),
            required=True,
            load_from="NapServiceConfig",
        ),
    }


"""
API: ModifyHighProtectGameIPInfo

修改高防IP信息
"""


class ModifyHighProtectGameIPInfoRequestSchema(schema.RequestSchema):
    """ModifyHighProtectGameIPInfo - 修改高防IP信息"""

    fields = {
        "DefenceIp": fields.Str(required=True, dump_to="DefenceIp"),
        "ResourceId": fields.Str(required=True, dump_to="ResourceId"),
        "UserIP": fields.Str(required=True, dump_to="UserIP"),
    }


class ModifyHighProtectGameIPInfoResponseSchema(schema.ResponseSchema):
    """ModifyHighProtectGameIPInfo - 修改高防IP信息"""

    fields = {}


"""
API: ModifyHighProtectGameService

修改高防信息
"""


class ModifyHighProtectGameServiceRequestSchema(schema.RequestSchema):
    """ModifyHighProtectGameService - 修改高防信息"""

    fields = {
        "HighProtectGameServiceName": fields.Str(
            required=False, dump_to="HighProtectGameServiceName"
        ),
        "ResourceId": fields.Str(required=True, dump_to="ResourceId"),
    }


class ModifyHighProtectGameServiceResponseSchema(schema.ResponseSchema):
    """ModifyHighProtectGameService - 修改高防信息"""

    fields = {}


"""
API: ModifyNapServiceAutoRenew

修改高防服务自动续费开关
"""


class ModifyNapServiceAutoRenewRequestSchema(schema.RequestSchema):
    """ModifyNapServiceAutoRenew - 修改高防服务自动续费开关"""

    fields = {
        "AutoRenew": fields.Int(required=True, dump_to="AutoRenew"),
        "ResourceId": fields.Str(required=True, dump_to="ResourceId"),
    }


class ModifyNapServiceAutoRenewResponseSchema(schema.ResponseSchema):
    """ModifyNapServiceAutoRenew - 修改高防服务自动续费开关"""

    fields = {}


"""
API: RenewHighProtectGameService

续费高防服务
"""


class RenewHighProtectGameServiceRequestSchema(schema.RequestSchema):
    """RenewHighProtectGameService - 续费高防服务"""

    fields = {
        "AreaLine": fields.Str(required=True, dump_to="AreaLine"),
        "ChargeType": fields.Str(required=True, dump_to="ChargeType"),
        "CouponId": fields.Str(required=False, dump_to="CouponId"),
        "DefenceDDosBaseFlowArr": fields.List(fields.Str()),
        "DefenceDDosMaxFlowArr": fields.List(fields.Str()),
        "DefenceType": fields.Str(required=False, dump_to="DefenceType"),
        "EngineRoom": fields.List(fields.Str()),
        "LineType": fields.Str(required=True, dump_to="LineType"),
        "Quantity": fields.Int(required=True, dump_to="Quantity"),
        "ResourceId": fields.Str(required=True, dump_to="ResourceId"),
        "SrcBandwidth": fields.Int(required=True, dump_to="SrcBandwidth"),
    }


class RenewHighProtectGameServiceResponseSchema(schema.ResponseSchema):
    """RenewHighProtectGameService - 续费高防服务"""

    fields = {
        "ResourceInfo": models.ResourceInfoSchema(),
    }


"""
API: SetNapDomainEntryRemark

设置域名条目备注
"""


class SetNapDomainEntryRemarkRequestSchema(schema.RequestSchema):
    """SetNapDomainEntryRemark - 设置域名条目备注"""

    fields = {
        "Domain": fields.Str(required=True, dump_to="Domain"),
        "Remark": fields.Str(required=False, dump_to="Remark"),
        "ResourceId": fields.Str(required=True, dump_to="ResourceId"),
    }


class SetNapDomainEntryRemarkResponseSchema(schema.ResponseSchema):
    """SetNapDomainEntryRemark - 设置域名条目备注"""

    fields = {}


"""
API: SetNapFwdRuleRemark

设置高防转发规则备注信息
"""


class SetNapFwdRuleRemarkRequestSchema(schema.RequestSchema):
    """SetNapFwdRuleRemark - 设置高防转发规则备注信息"""

    fields = {
        "Remark": fields.Str(required=False, dump_to="Remark"),
        "ResourceId": fields.Str(required=True, dump_to="ResourceId"),
        "RuleIndex": fields.Str(required=True, dump_to="RuleIndex"),
    }


class SetNapFwdRuleRemarkResponseSchema(schema.ResponseSchema):
    """SetNapFwdRuleRemark - 设置高防转发规则备注信息"""

    fields = {}


"""
API: SetNapIpRemark

设置高防IP的备注信息
"""


class SetNapIpRemarkRequestSchema(schema.RequestSchema):
    """SetNapIpRemark - 设置高防IP的备注信息"""

    fields = {
        "NapIp": fields.Str(required=True, dump_to="NapIp"),
        "Remark": fields.Str(required=False, dump_to="Remark"),
        "ResourceId": fields.Str(required=True, dump_to="ResourceId"),
    }


class SetNapIpRemarkResponseSchema(schema.ResponseSchema):
    """SetNapIpRemark - 设置高防IP的备注信息"""

    fields = {}


"""
API: UnBindNapIP

直连高防：将高防EIP从资源上解绑
"""


class UnBindNapIPRequestSchema(schema.RequestSchema):
    """UnBindNapIP - 直连高防：将高防EIP从资源上解绑"""

    fields = {
        "BindResourceId": fields.Str(required=True, dump_to="BindResourceId"),
        "EIPId": fields.Str(required=True, dump_to="EIPId"),
        "NapIp": fields.Str(required=True, dump_to="NapIp"),
        "ProjectId": fields.Str(required=True, dump_to="ProjectId"),
        "ResourceId": fields.Str(required=True, dump_to="ResourceId"),
        "ResourceType": fields.Str(required=True, dump_to="ResourceType"),
    }


class UnBindNapIPResponseSchema(schema.ResponseSchema):
    """UnBindNapIP - 直连高防：将高防EIP从资源上解绑"""

    fields = {
        "Message": fields.Str(required=True, load_from="Message"),
    }


"""
API: UpdateBGPServiceFwdRule

用于修改BGP高防的规则信息
"""


class UpdateBGPServiceFwdRuleRequestSchema(schema.RequestSchema):
    """UpdateBGPServiceFwdRule - 用于修改BGP高防的规则信息"""

    fields = {
        "BackupIP": fields.Str(required=False, dump_to="BackupIP"),
        "BackupPort": fields.Int(required=False, dump_to="BackupPort"),
        "BgpIP": fields.Str(required=True, dump_to="BgpIP"),
        "BgpIPPort": fields.Int(required=False, dump_to="BgpIPPort"),
        "FwdType": fields.Str(required=False, dump_to="FwdType"),
        "LoadBalance": fields.Str(required=False, dump_to="LoadBalance"),
        "ResourceId": fields.Str(required=True, dump_to="ResourceId"),
        "RuleID": fields.Str(required=True, dump_to="RuleID"),
        "RuleIndex": fields.Int(required=True, dump_to="RuleIndex"),
        "SourceAddrArr": fields.List(fields.Str()),
        "SourceDetect": fields.Int(required=False, dump_to="SourceDetect"),
        "SourcePortArr": fields.List(fields.Str()),
        "SourceToaIDArr": fields.List(fields.Str()),
    }


class UpdateBGPServiceFwdRuleResponseSchema(schema.ResponseSchema):
    """UpdateBGPServiceFwdRule - 用于修改BGP高防的规则信息"""

    fields = {
        "RuleIndex": fields.Int(required=False, load_from="RuleIndex"),
    }


"""
API: UpdateNapFwdRuleDomainResolution

手动触发域名回源转发规则更新
"""


class UpdateNapFwdRuleDomainResolutionRequestSchema(schema.RequestSchema):
    """UpdateNapFwdRuleDomainResolution - 手动触发域名回源转发规则更新"""

    fields = {
        "ResourceId": fields.Str(required=True, dump_to="ResourceId"),
        "RuleIndex": fields.Int(required=True, dump_to="RuleIndex"),
    }


class UpdateNapFwdRuleDomainResolutionResponseSchema(schema.ResponseSchema):
    """UpdateNapFwdRuleDomainResolution - 手动触发域名回源转发规则更新"""

    fields = {}


"""
API: UpgradeHighProtectGameService

升降级高防服务
"""


class UpgradeHighProtectGameServiceRequestSchema(schema.RequestSchema):
    """UpgradeHighProtectGameService - 升降级高防服务"""

    fields = {
        "AreaLine": fields.Str(required=True, dump_to="AreaLine"),
        "CouponId": fields.Str(required=False, dump_to="CouponId"),
        "DefenceDDosBaseFlowArr": fields.List(fields.Str()),
        "DefenceDDosMaxFlowArr": fields.List(fields.Str()),
        "DefenceType": fields.Str(required=False, dump_to="DefenceType"),
        "EngineRoom": fields.List(fields.Str()),
        "LineType": fields.Str(required=True, dump_to="LineType"),
        "ResourceId": fields.Str(required=True, dump_to="ResourceId"),
        "SrcBandwidth": fields.Int(required=True, dump_to="SrcBandwidth"),
    }


class UpgradeHighProtectGameServiceResponseSchema(schema.ResponseSchema):
    """UpgradeHighProtectGameService - 升降级高防服务"""

    fields = {
        "ResourceInfo": models.ResourceInfoSchema(),
    }
