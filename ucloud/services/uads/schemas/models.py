""" Code is generated by ucloud-model, DO NOT EDIT IT. """

from ucloud.core.typesystem import schema, fields


class DomainConfigResultSchema(schema.ResponseSchema):
    """DomainConfigResult - 域名配置结果"""

    fields = {
        "Code": fields.Int(required=True, load_from="Code"),
        "Domain": fields.Str(required=True, load_from="Domain"),
        "Message": fields.Str(required=True, load_from="Message"),
    }


class ResourceInfoSchema(schema.ResponseSchema):
    """ResourceInfo - 资源信息"""

    fields = {
        "ResourceId": fields.Str(required=False, load_from="ResourceId"),
    }


class GameIpInfoTotalSchema(schema.ResponseSchema):
    """GameIpInfoTotal - 高防ip信息统一描述结构"""

    fields = {
        "Cname": fields.Str(required=False, load_from="Cname"),
        "DefenceIP": fields.Str(required=False, load_from="DefenceIP"),
        "LineType": fields.Str(required=False, load_from="LineType"),
        "Remark": fields.Str(required=False, load_from="Remark"),
        "RuleCnt": fields.Int(required=False, load_from="RuleCnt"),
        "SrcIP": fields.List(fields.Str()),
        "Status": fields.Str(required=False, load_from="Status"),
    }


class NetStatEntrySchema(schema.ResponseSchema):
    """NetStatEntry - 统计条目"""

    fields = {
        "Bps": fields.Float(required=False, load_from="Bps"),
        "Pps": fields.Int(required=False, load_from="Pps"),
    }


class NetStatsSchema(schema.ResponseSchema):
    """NetStats - 网络统计"""

    fields = {
        "Drop": NetStatEntrySchema(),
        "Egress": NetStatEntrySchema(),
        "Ingress": NetStatEntrySchema(),
        "Time": fields.Int(required=False, load_from="Time"),
    }


class ServiceInfoSchema(schema.ResponseSchema):
    """ServiceInfo - 高防服务信息"""

    fields = {
        "AccessMode": fields.Str(required=False, load_from="AccessMode"),
        "AreaLine": fields.Str(required=False, load_from="AreaLine"),
        "AutoRenew": fields.Str(required=False, load_from="AutoRenew"),
        "ChargeType": fields.Str(required=False, load_from="ChargeType"),
        "CreateTime": fields.Int(required=False, load_from="CreateTime"),
        "DefenceDDosBaseFlowArr": fields.List(fields.Int()),
        "DefenceDDosMaxFlowArr": fields.List(fields.Int()),
        "DefenceStatus": fields.Str(required=False, load_from="DefenceStatus"),
        "DefenceType": fields.Str(required=False, load_from="DefenceType"),
        "EngineRoom": fields.List(fields.Str()),
        "ExpiredTime": fields.Int(required=False, load_from="ExpiredTime"),
        "ForwardType": fields.Str(required=False, load_from="ForwardType"),
        "GameId": fields.Int(required=False, load_from="GameId"),
        "LineType": fields.Str(required=False, load_from="LineType"),
        "Name": fields.Str(required=False, load_from="Name"),
        "NapType": fields.Int(required=False, load_from="NapType"),
        "ProjectId": fields.Str(required=False, load_from="ProjectId"),
        "RegionId": fields.Int(required=False, load_from="RegionId"),
        "ResourceId": fields.Str(required=False, load_from="ResourceId"),
        "SrcBandwidth": fields.Int(required=False, load_from="SrcBandwidth"),
        "Vendor": fields.Int(required=False, load_from="Vendor"),
    }


class EIPAddrSetSchema(schema.ResponseSchema):
    """EIPAddrSet - EIP地址信息"""

    fields = {
        "EIPType": fields.Str(required=False, load_from="EIPType"),
        "IP": fields.Str(required=False, load_from="IP"),
        "OperatorName": fields.Str(required=False, load_from="OperatorName"),
    }


class ResouceSchema(schema.ResponseSchema):
    """Resouce - 资源信息"""

    fields = {
        "EIPId": fields.Str(required=False, load_from="EIPId"),
        "ResourceId": fields.Str(required=False, load_from="ResourceId"),
        "ResourceName": fields.Str(required=False, load_from="ResourceName"),
        "ResourceType": fields.Str(required=False, load_from="ResourceType"),
        "Zone": fields.Str(required=False, load_from="Zone"),
    }


class IPInfoSchema(schema.ResponseSchema):
    """IPInfo - 高防IP信息"""

    fields = {
        "CreateTime": fields.Int(required=False, load_from="CreateTime"),
        "EIPAddr": fields.List(EIPAddrSetSchema()),
        "EIPId": fields.Str(required=False, load_from="EIPId"),
        "EIPRegion": fields.Str(required=False, load_from="EIPRegion"),
        "Resource": ResouceSchema(),
        "Status": fields.Str(required=False, load_from="Status"),
        "Tag": fields.Str(required=False, load_from="Tag"),
    }


class FwdSourceInfoConfSchema(schema.ResponseSchema):
    """FwdSourceInfoConf - 转发规则，回源信息配置详细结构"""

    fields = {
        "IPList": fields.List(fields.Str()),
        "Port": fields.Int(required=False, load_from="Port"),
        "Source": fields.Str(required=False, load_from="Source"),
        "Toa": fields.Int(required=False, load_from="Toa"),
    }


class FwdSourceInfoSchema(schema.ResponseSchema):
    """FwdSourceInfo - 转发规则，回源配置信息"""

    fields = {
        "Conf": fields.List(FwdSourceInfoConfSchema()),
        "Type": fields.Str(required=False, load_from="Type"),
    }


class FwdClientProxyInfoSchema(schema.ResponseSchema):
    """FwdClientProxyInfo - 转发规则，回源代理配置列表"""

    fields = {
        "Count": fields.Int(required=False, load_from="Count"),
        "IPList": fields.List(fields.Str()),
    }


class BGPFwdRuleSchema(schema.ResponseSchema):
    """BGPFwdRule - BGP高防的转发规则信息"""

    fields = {
        "BackupIP": fields.Str(required=False, load_from="BackupIP"),
        "BackupPort": fields.Int(required=False, load_from="BackupPort"),
        "BgpIP": fields.Str(required=False, load_from="BgpIP"),
        "BgpIPPort": fields.Int(required=False, load_from="BgpIPPort"),
        "ClientProxyInfo": FwdClientProxyInfoSchema(),
        "CreateTime": fields.Int(required=False, load_from="CreateTime"),
        "FwdType": fields.Str(required=False, load_from="FwdType"),
        "LoadBalance": fields.Str(required=False, load_from="LoadBalance"),
        "Remark": fields.Str(required=False, load_from="Remark"),
        "RuleID": fields.Str(required=False, load_from="RuleID"),
        "RuleIndex": fields.Int(required=False, load_from="RuleIndex"),
        "SourceDetect": fields.Int(required=False, load_from="SourceDetect"),
        "SourceInfo": FwdSourceInfoSchema(),
        "Status": fields.Str(required=False, load_from="Status"),
        "UpdateTime": fields.Int(required=False, load_from="UpdateTime"),
    }


class BlockAllowDomainEntrySchema(schema.ResponseSchema):
    """BlockAllowDomainEntry - 阻止/允许域名条目"""

    fields = {
        "CreateTime": fields.Int(required=True, load_from="CreateTime"),
        "Domain": fields.Str(required=True, load_from="Domain"),
        "Remark": fields.Str(required=True, load_from="Remark"),
        "Status": fields.Int(required=True, load_from="Status"),
    }


class NapServiceConfigEntrySchema(schema.ResponseSchema):
    """NapServiceConfigEntry - 高防服务配置条目"""

    fields = {
        "AreaLine": fields.Str(required=False, load_from="AreaLine"),
        "DR": fields.Str(),
        "DayPay": fields.Str(),
        "Domain": fields.Str(),
        "DomainSrc": fields.Str(),
        "DynamicPay": fields.Str(),
        "EngineRoom": fields.Str(required=False, load_from="EngineRoom"),
        "LineType": fields.Str(required=False, load_from="LineType"),
        "MonthPay": fields.Str(),
        "NapType": fields.Int(required=False, load_from="NapType"),
        "YearPay": fields.Str(),
    }
