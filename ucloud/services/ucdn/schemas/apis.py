""" Code is generated by ucloud-model, DO NOT EDIT IT. """

from ucloud.core.typesystem import schema, fields
from ucloud.services.ucdn.schemas import models


""" UCDN API Schema
"""


"""
API: BatchDescribeNewUcdnDomain

批量获取加速域名配置
"""


class BatchDescribeNewUcdnDomainRequestSchema(schema.RequestSchema):
    """ BatchDescribeNewUcdnDomain - 批量获取加速域名配置
    """

    fields = {
        "ChannelType": fields.Str(required=False, dump_to="ChannelType"),
        "DomainId": fields.List(fields.Str()),
        "Limit": fields.Int(required=False, dump_to="Limit"),
        "Offset": fields.Int(required=False, dump_to="Offset"),
        "ProjectId": fields.Str(required=False, dump_to="ProjectId"),
    }


class BatchDescribeNewUcdnDomainResponseSchema(schema.ResponseSchema):
    """ BatchDescribeNewUcdnDomain - 批量获取加速域名配置
    """

    fields = {
        "Arrearage": fields.List(
            fields.Str(), required=False, load_from="Arrearage"
        ),
        "ChargeType": fields.Int(required=False, load_from="ChargeType"),
        "DomainList": fields.List(
            models.DomainInfoSchema(), required=False, load_from="DomainList"
        ),
        "LastChargeType": fields.Int(
            required=False, load_from="LastChargeType"
        ),
        "MaxDomainNum": fields.Int(required=False, load_from="MaxDomainNum"),
        "TotalCount": fields.Int(required=False, load_from="TotalCount"),
        "Vip": fields.Str(required=False, load_from="Vip"),
    }


"""
API: DescribeNewUcdnPrefetchCacheTask

获取预取任务状态
"""


class DescribeNewUcdnPrefetchCacheTaskRequestSchema(schema.RequestSchema):
    """ DescribeNewUcdnPrefetchCacheTask - 获取预取任务状态
    """

    fields = {
        "BeginTime": fields.Int(required=False, dump_to="BeginTime"),
        "EndTime": fields.Int(required=False, dump_to="EndTime"),
        "Limit": fields.Int(required=False, dump_to="Limit"),
        "Offset": fields.Int(required=False, dump_to="Offset"),
        "ProjectId": fields.Str(required=False, dump_to="ProjectId"),
        "Status": fields.Str(required=False, dump_to="Status"),
        "TaskId": fields.List(fields.Str()),
    }


class DescribeNewUcdnPrefetchCacheTaskResponseSchema(schema.ResponseSchema):
    """ DescribeNewUcdnPrefetchCacheTask - 获取预取任务状态
    """

    fields = {
        "TaskList": fields.List(
            models.TaskInfoSchema(), required=False, load_from="TaskList"
        ),
        "TotalCount": fields.Int(required=False, load_from="TotalCount"),
    }


"""
API: DescribeNewUcdnRefreshCacheTask

获取域名刷新任务状态
"""


class DescribeNewUcdnRefreshCacheTaskRequestSchema(schema.RequestSchema):
    """ DescribeNewUcdnRefreshCacheTask - 获取域名刷新任务状态
    """

    fields = {
        "BeginTime": fields.Int(required=False, dump_to="BeginTime"),
        "EndTime": fields.Int(required=False, dump_to="EndTime"),
        "Limit": fields.Int(required=False, dump_to="Limit"),
        "Offset": fields.Int(required=False, dump_to="Offset"),
        "ProjectId": fields.Str(required=False, dump_to="ProjectId"),
        "Status": fields.Str(required=False, dump_to="Status"),
        "TaskId": fields.List(fields.Str()),
    }


class DescribeNewUcdnRefreshCacheTaskResponseSchema(schema.ResponseSchema):
    """ DescribeNewUcdnRefreshCacheTask - 获取域名刷新任务状态
    """

    fields = {
        "TaskList": fields.List(
            models.TaskInfoSchema(), required=False, load_from="TaskList"
        ),
        "TotalCount": fields.Int(required=False, load_from="TotalCount"),
    }


"""
API: DescribePrefetchCacheTask

获取域名预取任务状态
"""


class DescribePrefetchCacheTaskRequestSchema(schema.RequestSchema):
    """ DescribePrefetchCacheTask - 获取域名预取任务状态
    """

    fields = {
        "BeginTime": fields.Int(required=False, dump_to="BeginTime"),
        "DomainId": fields.Str(required=True, dump_to="DomainId"),
        "EndTime": fields.Int(required=False, dump_to="EndTime"),
        "Limit": fields.Int(required=False, dump_to="Limit"),
        "Offset": fields.Int(required=False, dump_to="Offset"),
        "ProjectId": fields.Str(required=False, dump_to="ProjectId"),
        "Status": fields.Str(required=False, dump_to="Status"),
        "TaskId": fields.Str(required=False, dump_to="TaskId"),
    }


class DescribePrefetchCacheTaskResponseSchema(schema.ResponseSchema):
    """ DescribePrefetchCacheTask - 获取域名预取任务状态
    """

    fields = {
        "TaskSet": fields.List(
            models.PrefetchCacheTaskSetSchema(),
            required=False,
            load_from="TaskSet",
        ),
        "TotalCount": fields.Int(required=False, load_from="TotalCount"),
    }


"""
API: DescribeRefreshCacheTask

获取域名刷新任务状态
"""


class DescribeRefreshCacheTaskRequestSchema(schema.RequestSchema):
    """ DescribeRefreshCacheTask - 获取域名刷新任务状态
    """

    fields = {
        "BeginTime": fields.Int(required=False, dump_to="BeginTime"),
        "DomainId": fields.Str(required=True, dump_to="DomainId"),
        "EndTime": fields.Int(required=False, dump_to="EndTime"),
        "Limit": fields.Int(required=False, dump_to="Limit"),
        "Offset": fields.Int(required=False, dump_to="Offset"),
        "ProjectId": fields.Str(required=False, dump_to="ProjectId"),
        "Status": fields.Str(required=False, dump_to="Status"),
        "TaskId": fields.Str(required=False, dump_to="TaskId"),
    }


class DescribeRefreshCacheTaskResponseSchema(schema.ResponseSchema):
    """ DescribeRefreshCacheTask - 获取域名刷新任务状态
    """

    fields = {
        "TaskSet": fields.List(
            models.RefreshCacheTaskSetSchema(),
            required=False,
            load_from="TaskSet",
        ),
        "TotalCount": fields.Int(required=False, load_from="TotalCount"),
    }


"""
API: DescribeUcdnDomain

获取加速域名详细信息
"""


class DescribeUcdnDomainRequestSchema(schema.RequestSchema):
    """ DescribeUcdnDomain - 获取加速域名详细信息
    """

    fields = {
        "DomainId": fields.List(fields.Str()),
        "Limit": fields.Str(required=False, dump_to="Limit"),
        "Offset": fields.Int(required=False, dump_to="Offset"),
        "ProjectId": fields.Str(required=False, dump_to="ProjectId"),
    }


class DescribeUcdnDomainResponseSchema(schema.ResponseSchema):
    """ DescribeUcdnDomain - 获取加速域名详细信息
    """

    fields = {
        "ChargeType": fields.Str(required=False, load_from="ChargeType"),
        "DomainSet": fields.List(
            models.UcdnDomainSetSchema(), required=False, load_from="DomainSet"
        ),
        "TotalCount": fields.Int(required=False, load_from="TotalCount"),
    }


"""
API: DescribeUcdnLiveAccess

获取直播加速
"""


class DescribeUcdnLiveAccessRequestSchema(schema.RequestSchema):
    """ DescribeUcdnLiveAccess - 获取直播加速
    """

    fields = {"DomainId": fields.Str(required=False, dump_to="DomainId")}


class DescribeUcdnLiveAccessResponseSchema(schema.ResponseSchema):
    """ DescribeUcdnLiveAccess - 获取直播加速
    """

    fields = {
        "ChargeType": fields.Str(required=False, load_from="ChargeType"),
        "DomainSet": fields.List(
            models.UcdnLiveAccessDomainSetSchema(),
            required=False,
            load_from="DomainSet",
        ),
        "LastChargeType": fields.Str(
            required=False, load_from="LastChargeType"
        ),
        "TotalCount": fields.Int(required=False, load_from="TotalCount"),
    }


"""
API: GetNewUcdnDomainHttpCode

获取域名状态码监控
"""


class GetNewUcdnDomainHttpCodeRequestSchema(schema.RequestSchema):
    """ GetNewUcdnDomainHttpCode - 获取域名状态码监控
    """

    fields = {
        "Areacode": fields.Str(required=False, dump_to="Areacode"),
        "BeginTime": fields.Int(required=False, dump_to="BeginTime"),
        "DomainId": fields.List(fields.Str()),
        "EndTime": fields.Int(required=False, dump_to="EndTime"),
        "ProjectId": fields.Str(required=False, dump_to="ProjectId"),
        "Type": fields.Int(required=True, dump_to="Type"),
    }


class GetNewUcdnDomainHttpCodeResponseSchema(schema.ResponseSchema):
    """ GetNewUcdnDomainHttpCode - 获取域名状态码监控
    """

    fields = {
        "HttpCodeDetail": fields.List(
            models.HttpCodeInfoSchema(),
            required=False,
            load_from="HttpCodeDetail",
        )
    }


"""
API: GetNewUcdnDomainHttpCodeV2

获取域名详细状态码监控
"""


class GetNewUcdnDomainHttpCodeV2RequestSchema(schema.RequestSchema):
    """ GetNewUcdnDomainHttpCodeV2 - 获取域名详细状态码监控
    """

    fields = {
        "Areacode": fields.Str(required=False, dump_to="Areacode"),
        "BeginTime": fields.Int(required=True, dump_to="BeginTime"),
        "DomainId": fields.List(fields.Str()),
        "EndTime": fields.Int(required=True, dump_to="EndTime"),
        "ProjectId": fields.Str(required=False, dump_to="ProjectId"),
        "Type": fields.Int(required=True, dump_to="Type"),
    }


class GetNewUcdnDomainHttpCodeV2ResponseSchema(schema.ResponseSchema):
    """ GetNewUcdnDomainHttpCodeV2 - 获取域名详细状态码监控
    """

    fields = {
        "HttpCodeV2Detail": fields.List(
            models.HttpCodeV2DetailSchema(),
            required=False,
            load_from="HttpCodeV2Detail",
        )
    }


"""
API: GetUcdnDomainBandwidth

获取加速域名带宽使用信息
"""


class GetUcdnDomainBandwidthRequestSchema(schema.RequestSchema):
    """ GetUcdnDomainBandwidth - 获取加速域名带宽使用信息
    """

    fields = {
        "Areacode": fields.Str(required=False, dump_to="Areacode"),
        "BeginTime": fields.Int(required=False, dump_to="BeginTime"),
        "DomainId": fields.List(fields.Str()),
        "EndTime": fields.Int(required=False, dump_to="EndTime"),
        "ProjectId": fields.Str(required=False, dump_to="ProjectId"),
        "Type": fields.Int(required=False, dump_to="Type"),
    }


class GetUcdnDomainBandwidthResponseSchema(schema.ResponseSchema):
    """ GetUcdnDomainBandwidth - 获取加速域名带宽使用信息
    """

    fields = {
        "BandWidthSet": fields.List(
            models.CDNBandwidthSetSchema(),
            required=False,
            load_from="BandWidthSet",
        ),
        "Traffic": fields.Float(required=False, load_from="Traffic"),
    }


"""
API: GetUcdnDomainLog

获取加速域名原始日志
"""


class GetUcdnDomainLogRequestSchema(schema.RequestSchema):
    """ GetUcdnDomainLog - 获取加速域名原始日志
    """

    fields = {
        "BeginTime": fields.Int(required=False, dump_to="BeginTime"),
        "DomainId": fields.List(fields.Str()),
        "EndTime": fields.Int(required=False, dump_to="EndTime"),
        "ProjectId": fields.Str(required=False, dump_to="ProjectId"),
        "Type": fields.Int(required=False, dump_to="Type"),
    }


class GetUcdnDomainLogResponseSchema(schema.ResponseSchema):
    """ GetUcdnDomainLog - 获取加速域名原始日志
    """

    fields = {
        "LogSet": fields.List(
            models.LogSetListSchema(), required=False, load_from="LogSet"
        )
    }


"""
API: GetUcdnDomainPrefetchEnable

获取域名预取开启状态
"""


class GetUcdnDomainPrefetchEnableRequestSchema(schema.RequestSchema):
    """ GetUcdnDomainPrefetchEnable - 获取域名预取开启状态
    """

    fields = {
        "DomainId": fields.Str(required=True, dump_to="DomainId"),
        "ProjectId": fields.Str(required=False, dump_to="ProjectId"),
    }


class GetUcdnDomainPrefetchEnableResponseSchema(schema.ResponseSchema):
    """ GetUcdnDomainPrefetchEnable - 获取域名预取开启状态
    """

    fields = {"Enable": fields.Int(required=False, load_from="Enable")}


"""
API: GetUcdnDomainTraffic

获取加速域名流量使用信息
"""


class GetUcdnDomainTrafficRequestSchema(schema.RequestSchema):
    """ GetUcdnDomainTraffic - 获取加速域名流量使用信息
    """

    fields = {
        "Areacode": fields.Str(required=False, dump_to="Areacode"),
        "BeginTime": fields.Int(required=False, dump_to="BeginTime"),
        "DomainId": fields.List(fields.Str()),
        "EndTime": fields.Int(required=False, dump_to="EndTime"),
        "ProjectId": fields.Str(required=False, dump_to="ProjectId"),
    }


class GetUcdnDomainTrafficResponseSchema(schema.ResponseSchema):
    """ GetUcdnDomainTraffic - 获取加速域名流量使用信息
    """

    fields = {
        "TrafficSet": fields.List(
            models.UcdnDomainTrafficSetSchema(),
            required=False,
            load_from="TrafficSet",
        )
    }


"""
API: GetUcdnLiveAccessBandwidth

获取直播加速带宽
"""


class GetUcdnLiveAccessBandwidthRequestSchema(schema.RequestSchema):
    """ GetUcdnLiveAccessBandwidth - 获取直播加速带宽
    """

    fields = {
        "BeginTime": fields.Int(required=False, dump_to="BeginTime"),
        "DomainId": fields.List(fields.Str()),
        "EndTime": fields.Int(required=False, dump_to="EndTime"),
        "Protocol": fields.Str(required=False, dump_to="Protocol"),
        "Type": fields.Int(required=True, dump_to="Type"),
    }


class GetUcdnLiveAccessBandwidthResponseSchema(schema.ResponseSchema):
    """ GetUcdnLiveAccessBandwidth - 获取直播加速带宽
    """

    fields = {
        "BandwidthSet": fields.List(
            models.UcdnLiveAccessBandwidthSetSchema(),
            required=False,
            load_from="BandwidthSet",
        ),
        "Traffic": fields.Float(required=False, load_from="Traffic"),
    }


"""
API: GetUcdnTraffic

获取流量信息
"""


class GetUcdnTrafficRequestSchema(schema.RequestSchema):
    """ GetUcdnTraffic - 获取流量信息
    """

    fields = {"ProjectId": fields.Str(required=False, dump_to="ProjectId")}


class GetUcdnTrafficResponseSchema(schema.ResponseSchema):
    """ GetUcdnTraffic - 获取流量信息
    """

    fields = {
        "TrafficSet": fields.List(
            models.TrafficSetSchema(), required=False, load_from="TrafficSet"
        )
    }


"""
API: PrefetchDomainCache

预取文件
"""


class PrefetchDomainCacheRequestSchema(schema.RequestSchema):
    """ PrefetchDomainCache - 预取文件
    """

    fields = {
        "DomainId": fields.Str(required=True, dump_to="DomainId"),
        "ProjectId": fields.Str(required=False, dump_to="ProjectId"),
        "UrlList": fields.List(fields.Str()),
    }


class PrefetchDomainCacheResponseSchema(schema.ResponseSchema):
    """ PrefetchDomainCache - 预取文件
    """

    fields = {"TaskId": fields.Str(required=False, load_from="TaskId")}


"""
API: PrefetchNewUcdnDomainCache

提交预取任务
"""


class PrefetchNewUcdnDomainCacheRequestSchema(schema.RequestSchema):
    """ PrefetchNewUcdnDomainCache - 提交预取任务
    """

    fields = {
        "ProjectId": fields.Str(required=False, dump_to="ProjectId"),
        "UrlList": fields.List(fields.Str()),
    }


class PrefetchNewUcdnDomainCacheResponseSchema(schema.ResponseSchema):
    """ PrefetchNewUcdnDomainCache - 提交预取任务
    """

    fields = {"TaskId": fields.Str(required=False, load_from="TaskId")}


"""
API: RefreshNewUcdnDomainCache

刷新缓存
"""


class RefreshNewUcdnDomainCacheRequestSchema(schema.RequestSchema):
    """ RefreshNewUcdnDomainCache - 刷新缓存
    """

    fields = {
        "ProjectId": fields.Str(required=False, dump_to="ProjectId"),
        "Type": fields.Str(required=True, dump_to="Type"),
        "UrlList": fields.List(fields.Str()),
    }


class RefreshNewUcdnDomainCacheResponseSchema(schema.ResponseSchema):
    """ RefreshNewUcdnDomainCache - 刷新缓存
    """

    fields = {"TaskId": fields.Str(required=False, load_from="TaskId")}


"""
API: RefreshUcdnDomainCache

刷新加速缓存
"""


class RefreshUcdnDomainCacheRequestSchema(schema.RequestSchema):
    """ RefreshUcdnDomainCache - 刷新加速缓存
    """

    fields = {
        "DomainId": fields.Str(required=True, dump_to="DomainId"),
        "ProjectId": fields.Str(required=False, dump_to="ProjectId"),
        "Type": fields.Str(required=True, dump_to="Type"),
        "UrlList": fields.List(fields.Str()),
    }


class RefreshUcdnDomainCacheResponseSchema(schema.ResponseSchema):
    """ RefreshUcdnDomainCache - 刷新加速缓存
    """

    fields = {"TaskId": fields.Str(required=False, load_from="TaskId")}


"""
API: SwitchUcdnChargeType

切换账号计费方式
"""


class SwitchUcdnChargeTypeRequestSchema(schema.RequestSchema):
    """ SwitchUcdnChargeType - 切换账号计费方式
    """

    fields = {
        "ChargeType": fields.Str(required=True, dump_to="ChargeType"),
        "ProjectId": fields.Str(required=False, dump_to="ProjectId"),
    }


class SwitchUcdnChargeTypeResponseSchema(schema.ResponseSchema):
    """ SwitchUcdnChargeType - 切换账号计费方式
    """

    fields = {}


"""
API: UpdateUcdnDomain

更新加速域名配置
"""


class UpdateUcdnDomainParamCacheConfSchema(schema.RequestSchema):
    """ UpdateUcdnDomainParamCacheConf - 
    """

    fields = {
        "CacheBehavior": fields.Int(required=False, dump_to="CacheBehavior"),
        "CacheTTL": fields.Int(required=False, dump_to="CacheTTL"),
        "CacheUnit": fields.Str(required=False, dump_to="CacheUnit"),
        "Description": fields.Str(required=False, dump_to="Description"),
        "PathPattern": fields.Str(required=False, dump_to="PathPattern"),
    }


class UpdateUcdnDomainRequestSchema(schema.RequestSchema):
    """ UpdateUcdnDomain - 更新加速域名配置
    """

    fields = {
        "CacheConf": fields.List(UpdateUcdnDomainParamCacheConfSchema()),
        "DomainId": fields.Str(required=True, dump_to="DomainId"),
        "ProjectId": fields.Str(required=False, dump_to="ProjectId"),
        "SourceIp": fields.List(fields.Str()),
        "TestUrl": fields.Str(required=False, dump_to="TestUrl"),
    }


class UpdateUcdnDomainResponseSchema(schema.ResponseSchema):
    """ UpdateUcdnDomain - 更新加速域名配置
    """

    fields = {}


"""
API: UpdateUcdnDomainStatus

更新加速域名状态
"""


class UpdateUcdnDomainStatusRequestSchema(schema.RequestSchema):
    """ UpdateUcdnDomainStatus - 更新加速域名状态
    """

    fields = {
        "DomainId": fields.Str(required=True, dump_to="DomainId"),
        "ProjectId": fields.Str(required=False, dump_to="ProjectId"),
        "Status": fields.Str(required=True, dump_to="Status"),
    }


class UpdateUcdnDomainStatusResponseSchema(schema.ResponseSchema):
    """ UpdateUcdnDomainStatus - 更新加速域名状态
    """

    fields = {}
